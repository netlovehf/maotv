#爬虫类返回的相关Json字符串格式说明
#homeContent
{
	"class": [{   // 分类
		"type_id": "dianying", // 分类id 
		"type_name": "电影" // 分类名
	}, {
		"type_id": "lianxuju",
		"type_name": "连续剧"
	}],
	"filters": { // 筛选
		"dianying": [{ // 分类id 就是上面class中的分类id
			"key": "0", // 筛选key
			"name": "分类", // 筛选名称
			"value": [{ // 筛选选项 
				"n": "全部", // 选项展示的名称
				"v": "dianying" // 选项最终在url中的展现
			}, {
				"n": "动作片",
				"v": "dongzuopian"
			}]
		}],
		"lianxuju": [{
			"key": 0,
			"name": "分类",
			"value": [{
				"n": "全部",
				"v": "lianxuju"
			}, {
				"n": "国产剧",
				"v": "guochanju"
			}, {
				"n": "港台剧",
				"v": "gangtaiju"
			}]
		}]
	},
	"list": [{ // 首页最近更新视频列表
		"vod_id": "1901", // 视频id
		"vod_name": "判决", // 视频名
		"vod_pic": "https:\/\/pic.imgdb.cn\/item\/614631e62ab3f51d918e9201.jpg", // 展示图片
		"vod_remarks": "6.8" // 视频信息 展示在 视频名上方
	}, {
		"vod_id": "1908",
		"vod_name": "移山的父亲",
		"vod_pic": "https:\/\/pic.imgdb.cn\/item\/6146fab82ab3f51d91c01af1.jpg",
		"vod_remarks": "6.7"
	}]
}
#categoryContent
{
	"page": 1, // 当前页
	"pagecount": 2, // 总共几页
	"limit": 60, // 每页几条数据
	"total": 120, // 总共多少调数据
	"list": [{ // 视频列表 下面的视频结构 同上面homeContent中的
		"vod_id": "1897",
		"vod_name": "北区侦缉队",
		"vod_pic": "https:\/\/pic.imgdb.cn\/item\/6145d4b22ab3f51d91bd98b6.jpg",
		"vod_remarks": "7.3"
	}, {
		"vod_id": "1879",
		"vod_name": "浪客剑心 最终章 人诛篇",
		"vod_pic": "https:\/\/pic.imgdb.cn\/item\/60e3f37e5132923bf82ef95e.jpg",
		"vod_remarks": "8.0"
	}]
}
#detailContent
{
	"list": [{
		"vod_id": "1902",
		"vod_name": "海岸村恰恰恰",
		"vod_pic": "https:\/\/pic.imgdb.cn\/item\/61463fd12ab3f51d91a0f44d.jpg",
		"type_name": "剧情",
		"vod_year": "2021",
		"vod_area": "韩国",
		"vod_remarks": "更新至第8集",
		"vod_actor": "申敏儿,金宣虎,李相二,孔敏晶,徐尚沅,禹美华,朴艺荣,李世亨,边胜泰,金贤佑,金英玉",
		"vod_director": "柳济元",
		"vod_content": "海岸村恰恰恰剧情:　　韩剧海岸村恰恰恰 갯마을 차차차改编自2004年的电影《我的百事通男友洪班长》，海岸村恰恰恰 갯마을 차차차讲述来自大都市的牙医（申敏儿 饰）到充满人情味的海岸村开设牙医诊所，那里住着一位各方面都",
        // 播放源 多个用$$$分隔
		"vod_play_from": "qiepian$$$yun3edu", 
        // 播放列表 注意分隔符 分别是 多个源$$$分隔，源中的剧集用#分隔，剧集的名称和地址用$分隔
		"vod_play_url": "第1集$1902-1-1#第2集$1902-1-2#第3集$1902-1-3#第4集$1902-1-4#第5集$1902-1-5#第6集$1902-1-6#第7集$1902-1-7#第8集$1902-1-8$$$第1集$1902-2-1#第2集$1902-2-2#第3集$1902-2-3#第4集$1902-2-4#第5集$1902-2-5#第6集$1902-2-6#第7集$1902-2-7#第8集$1902-2-8" 
	}]
}
#searchContent
{
	"list": [{ // 视频列表 下面的视频结构 同上面homeContent中的
		"vod_id": "1606",
		"vod_name": "陪你一起长大",
		"vod_pic": "https:\/\/img.aidi.tv\/img\/upload\/vod\/20210417-1\/e27d4eb86f7cde375171dd324b2c19ae.jpg",
		"vod_remarks": "更新至第37集"
	}]
}

#如何在自定义配置中调用我们代码包中的Spider
#同样在自定义json中加入相应的播放源即可，type=3, api对应你代码工程中自定义的爬虫类名（api必须是csp_开头），例如实例工程中的Aidi

{
    "key": "csp_Aidi",
    "name": "爱迪",
    "type": 3,
    "api": "csp_Aidi",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
}

#Json解析扩展（需v2.0.2及以上版本）

#通过jar包可以实现json解析并发、轮询等相关功能，参与并发和轮询的json解析地址，默认为解析地址列表中的所有json解析（即type=1）。

#在自定义json中的parse里加入相应的解析配置（type=2）即可启用。调用扩展类的名称配置在parse的url字段里，例如扩展类JsonParallel的json配置url字段值为Parallel。如下：

{
    "name": "Json并发",
    "type": 2,
    "url": "Parallel"
},
{
    "name": "Json轮询",
    "type": 2,
    "url": "Sequence"
}

#共享包
#这里的jar包由群友玩家共享的爬虫代码生成，不定期更新jar包和配置
#注意：由于防火墙的问题，你可能无法直接使用这里的jar包，请自己想办法解决
"spider": "https://github.com/catvod/CatVodTVSpider/blob/master/jar/custom_spider.jar?raw=true",
......
"sites": [
......
  {
    "key": "csp_Aidi",
    "name": "爱迪",
    "type": 3,
    "api": "csp_Aidi",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_Enlienli",
    "name": "嗯哩嗯哩",
    "type": 3,
    "api": "csp_Enlienli",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_EPang",
    "name": "阿房影视(已废弃)",
    "type": 3,
    "api": "csp_EPang",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_Auete",
    "name": "Auete",
    "type": 3,
    "api": "csp_Auete",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_Cokemv",
    "name": "Cokemv",
    "type": 3,
    "api": "csp_Cokemv",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_Buka",
    "name": "真不卡(测试)",
    "type": 3,
    "api": "csp_Buka",
    "searchable": 0,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_Ysgc",
    "name": "影视工厂",
    "type": 3,
    "api": "csp_Ysgc",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_N0ys",
    "name": "90影视",
    "type": 3,
    "api": "csp_N0ys",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 0
  },
  {
    "key": "csp_Ubo",
    "name": "U播影视(已废弃)",
    "type": 3,
    "api": "csp_Ubo",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_Nekk",
    "name": "9E看看",
    "type": 3,
    "api": "csp_Nekk",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_EPangApp",
    "name": "阿房影视App",
    "type": 3,
    "api": "csp_EPangApp",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_Djx",
    "name": "瓜皮TV(爬虫)",
    "type": 3,
    "api": "csp_Djx",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_Imaple",
    "name": "枫林网(爬虫)",
    "type": 3,
    "api": "csp_Imaple",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_Jumi",
    "name": "剧迷(爬虫)",
    "type": 3,
    "api": "csp_Jumi",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_Nfx",
    "name": "NFXHD(爬虫)",
    "type": 3,
    "api": "csp_Nfx",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
  },
  {
    "key": "csp_Juhi",
    "name": "剧嗨(爬虫)",
    "type": 3,
    "api": "csp_Juhi",
    "searchable": 1,
    "quickSearch": 0,
    "filterable": 1
    },
......
],
......
"parses": [
......
  {
    "name": "Json并发",
    "type": 2,
    "url": "Parallel"
  },
  {
    "name": "Json轮询",
    "type": 2,
    "url": "Sequence"
  }
......  
]